name: CI/CD Pipeline for Golang Application

on:
  push:
    branches:
      - 'release/v[0-9]+.[0-9]+'
    paths-ignore:
      - '**.md'
#  commit_message:
#    ignore: '#NORUN*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      
      - name: Scan for Vulnerabilities
        id: trivy_scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'filesystem'
          scan-dir: '.'
          format: 'table'
          fail-on: 'MEDIUM'
#          fail-on: 'CRITICAL'
          ignore-unfixed: true
          severity: 'MEDIUM'
#          severity: 'CRITICAL'
          output: 'scan-report.txt'
            
      - name: Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "Trivy scan failed, please check the report."
        
      - name: Upload Report to Slack
        if: failure()
        uses: adrey/slack-file-upload-action@master
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          file-path: 'scan-report.txt'
          channels: ${{ secrets.SLACK_CHANNEL_ID }}

      - name: Set QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Build Docker Image
#        if: steps.trivy_scan.outputs.result == 'success'
        if: success()
        run: docker build -t lhy927/cicd_workshop:${{ github.sha }} .
      
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      
      - name: Push Image to DockerHub
        run: docker push lhy927/cicd_workshop:${{ github.sha }}

      - name: Install Cosign
        if: success()
        uses: sigstore/cosign-installer@main
      
#      - name: Generate cosign key pair
#        if: success()
#        run: cosign generate-key-pair
#        env:
#          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Sign Docker Image
        if: success()
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          cosign sign --key cosign.key -y lhy927/cicd_workshop:${{ github.sha }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      
      - name: Slack Notification - Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "
          *Image build & signed*\n
          *Name:* Li, Hongyi\n
          *Matriculation Number:* A0290857N\n
          *Email:* e1327888@u.nus.edu\n
          *Repository:* ${{ github.server_url }}/${{ github.repository }}\n
          *DockerHub:* https://hub.docker.com/repository/docker/lhy927/cicd_workshop/general "
#          SLACK_MESSAGE: "test"

#      - name: Slack Notification on Success
#        if: success()
#        uses: slackapi/slack-github-action@v1.19.0
#        with:
#          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
#          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
#          attachments: '[{"pretext": "CI/CD Pipeline Succeeded", "text": "Name: Li, Hongyi\nMatriculation Number: A0290857N\nEmail: e1327888@u.nus.edu\nRepository: ${{ github.server_url }}/${{ github.repository }}\nDocker Hub URL: https://hub.docker.com/r/lhy927/cicd_workshop:${{ github.sha }}"}]'
        

